/*
body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}
*/


/*Checkout*/

.column-labels {
  display: flex;
  color: white;
  border-bottom: 1px solid white;
  margin-bottom: 1rem;
}

.product-image {
  float: left;
  width: 16.5%;
  color: white;
}
.product-details {
  float: left;
  width: 30%;
  color: white;
}
.product-price {
  float: left;
  width: 15%;
  color: white;
}
.product-quantity {
  float: left;
  width: 16%;
  color: white;
}
.product-removal {
  float: left;
  width: 9%;
  color: white;
}
.product-line-price {
  float: right;
  width: 12%;
  text-align: right;
  color: white;
}

/* This is used as the traditional .clearfix class */
.group:before,
.group:after {
  content: "";
  display: table;
}
.group:after {
  clear: both;
}
.group {
  zoom: 1;
}

.product-container {
  display: grid;
}

/* Body/Header stuff */
.checkout-container {
  padding: 0px 30px 30px 20px;
  font-weight: 100;
}

.checkout-container h1 {
  font-weight: 100;
}

.checkout-container label {
  color: red;
}

.shopping-cart {
  margin-top: -45px;
}

.checkout-container label {
  padding-bottom: 15px;
  margin-bottom: 15px;
}

/* Product entries */
.product {
  margin-bottom: 20px;
  padding-bottom: 10px;
  border-bottom: 1px solid white;
}

.product-image {
  text-align: center;
}

.checkout-container img {
  width: 150px;
}

.product-title {
  margin-right: 20px;
  font-weight: bold;
}
.product-description {
  font-family: sans-serif;
  margin: 5px 30px 5px 0;
  line-height: 1.4em;
}

.product-quantity input {
  width: 40px;
}

.remove-product {
  border: 0;
  padding: 4px 8px;
  background-color: rgb(191, 66, 66);
  color: #fff;
  font-weight: bold;
  font-size: 12px;
  border-radius: 3px;
}

.remove-product:hover {
  background-color: rgb(140, 35, 35);
}

/* Totals section */

.totals {
  color: white;
  display: grid;
}

.totals-item {
  display: flex;
  float: right;
  clear: both;
  width: 100%;
  margin-bottom: 10px;
}

.checkout-container label {
  color: #c200a1;
  font-weight: bold;
  float: left;
  clear: both;
  width: 100%;
  text-align: right;
}

.checkout-container .product-image {
  color: #c200a1;
  font-weight: bold;
  text-align: center;
}

.checkout-container .product-details {
  color: #c200a1;
  font-weight: bold;
  text-align: left;
}

.totals-value {
  float: right;
  width: 21%;
  text-align: right;
}

.totals-item-total {
  font-weight: bold;
}

.checkout-container {
  padding-bottom: 4rem;
}

.checkout {
  float: right;
  border: 0;
  margin-top: 20px;
  padding: 6px 25px;
  background-color: #f58700;
  color: #fff;
  font-size: 25px;
  border-radius: 3px;
  font-family: sans-serif;
  font-weight: bold;
  display: none;
}

.checkout:hover {
  color: #fff;
  background-color: #cc6900;
}

/* Make adjustments for tablet */
@media screen and (max-width: 1200px) {
  .shopping-cart {
    margin: 0;
    padding-top: 20px;
    border-top: 1px solid greenyellow;
  }

  .column-labels {
    display: none;
  }

  .product-image {
    float: right;
    width: auto;
  }

  .checkout-container img {
    margin: 0 0 10px 10px;
  }

  .product-details {
    float: none;
    margin-bottom: 10px;
    width: auto;
  }

  .product-price {
    clear: both;
    width: 70px;
  }

  .product-quantity {
    width: 100px;
  }

  .checkout-container input {
    margin-left: 20px;
  }

  .product-quantity:before {
    content: "x";
  }

  .product-removal {
    width: auto;
  }

  .product-line-price {
    float: right;
    width: 70px;
  }
}

/* Make more adjustments for phone */
@media screen and (max-width: 350px) {
  .product-removal {
    float: right;
  }

  .product-line-price {
    float: right;
    clear: left;
    width: auto;
    margin-top: 10px;
  }

  .product .product-line-price:before {
    content: "Item Total: $";
  }

  .checkout-container label {
    width: 60%;
  }

  .totals-value {
    width: 40%;
  }
}

.finish {
  border: 0;
  margin-top: 20px;
  padding: 6px 25px;
  background-color: #d6d6d6;
  color: rgb(19, 19, 19);
  font-size: 20px;
  border-radius: 3px;
  font-family: sans-serif;
  font-weight: bold;
  transition-duration: 0.2s;
}

.finish:hover {
  opacity: 0.6;
}

/*OTHERS*/

.review-container {
  margin-top: 1rem;
  
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 1rem;
  color: white;
}

.user-review {
  border-radius: 25px;
  background-color: #171717;
  padding: 1rem 1.5rem;
}

input[type='radio'] {
  -webkit-appearance:none;
  outline:none;
}

.finish-details input {
  margin-top: 0.25rem;
  padding: 0.5rem;
  font-weight: 600;
  width: 100%;
}

.add-review-card {
  display: flex;
  padding: 1rem;
  border: solid 1px rgba(255, 255, 255, 0.295); 
  margin-bottom: 1rem;
}

.add-review-card div:nth-child(2) {
  flex-grow: 1;
}

.add-review-card textarea {
  margin-top: 5px;
  padding: 0.5rem;
  width: 100%;
}


/*
ignore this. it's just used to put the two example panels next to each other.
*/
.part {
  float:left;
  margin:0 5px;
}

/*
start by styling the box around the star.
the only important parts are display and width, which force the container to constrain to the star widths. Note that using padding is problematic and unadvised.
*/
.stars {
  display:inline-block;
  width:auto;
  position:relative;
  font-size:28px;
  margin-top: -5px;
}
/*
the BEFORE:pseudo element. This will represent the number of stars in the actual rating.
it floats above the AFTER element.
*/
.stars:BEFORE {
  content:"★★★★★";
  position:absolute;
  overflow:hidden;
  z-index:1;
  left:0px;
  top:0px;
  /* everything below here is optional. */
  color:yellow;
  text-shadow:0px 1px 0 #000, 0 -1px 0 #fff;
}
/*
the AFTER:pseudo element. This will represent the total possible  stars available. It is set to relative to ensure it takes up the proper amount of space.
*/
.stars:AFTER {
  content:"★★★★★";
  position:relative;
  color:#fff;
}
/*
if including user rating controls, float the AFTER element.
*/
.stars.rate:AFTER {
  position:absolute;
  left:0px;
}
/*
default state for the  user rating controls. invisible, but floating above the BEFORE and AFTER elements
*/
.stars.rate > A {
  color:transparent;
  text-decoration:none;
  position:relative;
  z-index:2;
}
/*
if the user is floating thier mouse above the rating, hide the display stars.
*/
.stars.rate:HOVER:BEFORE,
.stars.rate:HOVER:AFTER {
  display:none;
}
/*
turn all sthe start "ON" by default.
*/
.stars.rate:HOVER > A {
  color:yellow;
  text-shadow:0px 1px 0 #000, 0 -1px 0 #fff;
}
/*
optional style for the specific star control a user is directly above.
*/
.stars.rate:HOVER > A:HOVER {
  color:yellow;
  text-shadow:0px 2px 0 #000, 0 -1px 0 #fff;
  top:-1px;
}
/*
turn "OFF" all stars after the one the user is hovering over.
*/
.stars.rate >A:HOVER ~ A {
  color:#fff;
  text-shadow:none;
}
/* 
all the styles below are used to display the apropriate portion of the BEFORE element based on percentage rating. unfortunately you will need to create a specific rule for each level of granularity you wish to display.


if the CSS3 attr() function proposal ever gets implimented
the remaining rules could all be replaced with the following:
.stars[data-percent]:BEFORE {
  width:attr(data-percent,%,0);
}

*/
.stars:NOT([data-percent]):BEFORE,
.stars[data-percent="0"]:BEFORE {
  display:none;
}
/* 1/2 a star */
.stars[data-percent="10"]:BEFORE {
  width:10%;
}
/* 1 star */
.stars[data-percent="20"]:BEFORE {
  width:20%;
}
/* 1 & 1/2 stars */
.stars[data-percent="30"]:BEFORE {
  width:30%;
}
/* etc. */
.stars[data-percent="40"]:BEFORE {
  width:40%;
}
.stars[data-percent="50"]:BEFORE {
  width:50%;
}
.stars[data-percent="60"]:BEFORE {
  width:60%;
}
.stars[data-percent="70"]:BEFORE {
  width:70%;
}
.stars[data-percent="80"]:BEFORE {
  width:80%;
}
.stars[data-percent="90"]:BEFORE {
  width:90%;
}
.stars[data-percent="100"]:BEFORE {
  width:100%;
}
